[
    {
        "id": "3f2da72f.995ab8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "99bf091c.ae35b8",
        "type": "tab",
        "label": "sync-receive-01",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9e3e4566.027698",
        "type": "tab",
        "label": "sync-receive-02",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07e020c.d4d43",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "188d93e1.8dcc1c",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "1da6518.fb1b7af"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8857082f.cfdaa8",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6a402d92.12d7c4",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b1fab3c6.1f34c"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "144aea5f.fcbd96",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "f3a00884.6a1308",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/rfcomm2",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "12",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "cc197431.86bee8",
        "type": "websocket-listener",
        "z": "",
        "path": "/sync-receive/websocket",
        "wholemsg": "false"
    },
    {
        "id": "796050bc.3b121",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/rfcomm1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "12",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "3ab766b1.558d9a",
        "type": "template",
        "z": "f07e020c.d4d43",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4109bee6.c2294",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "fd2bae7.8730f5"
            ]
        ]
    },
    {
        "id": "ed534f2d.ee021",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"loginDialog\" title=\"Login\" class='card'>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableText\">Password</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"loginPassword\" type=\"password\" value=\"\" /></td>\n                </tr>\n           </table>\n        </div>\n    </div>    \n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "20e2a34a.7be64c"
            ]
        ]
    },
    {
        "id": "91ca4a7b.9010f8",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "ed534f2d.ee021"
            ]
        ]
    },
    {
        "id": "fd2bae7.8730f5",
        "type": "http response",
        "z": "188d93e1.8dcc1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "85f6e038.56c86",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            loginDialog(\"close\");\n//            userID  = getRandomInt(32768);\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        var jwtToken = '';\n        var loginCallback = null;\n        var loginCallbackInfo = null;\n        function checkLogin(callback, callbackInfo)\n        {\n            if (jwtToken.length > 0) return callback(callbackInfo);\n            loginDialog(\"open\", callback, callbackInfo);\n        }\n        function loadJwtToken(data)\n        {\n            if (data.token == null)\n            {\n                acknowledgeDialog('Error', 'Login', 'Denied');\n            }\n            else\n            {\n                jwtToken = data.token;\n                loginCallback(loginCallbackInfo);\n            }\n        }\n        function loginDialog(action, callback, callbackInfo) \n        {\n            $( \"#loginDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Login\",\n                            click: function() \n                            {\n                                ws.send(JSON.stringify(\n                                {\n                                    topic       : 'getJwtToken',\n                                    payload     : \n                                    {\n//                                        loginUser       : $('#loginUser').val(),\n                                        loginPassword   : $('#loginPassword').val()\n                                    },\n                                    'userID'    : userID,\n                                }));\n                                loginCallback = callback;\n                                loginCallbackInfo = callbackInfo;\n                                $( this ).dialog( \"close\" );\n                            },\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n            $( \"#loginDialog\" ).dialog(action);\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "91ca4a7b.9010f8"
            ]
        ]
    },
    {
        "id": "1da6518.fb1b7af",
        "type": "function",
        "z": "188d93e1.8dcc1c",
        "name": "Create userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "85f6e038.56c86"
            ]
        ]
    },
    {
        "id": "20e2a34a.7be64c",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "4109bee6.c2294"
            ]
        ]
    },
    {
        "id": "73f0aea6.1d002",
        "type": "template",
        "z": "8857082f.cfdaa8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fab3c6.1f34c",
        "type": "subflow:8857082f.cfdaa8",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e205aa81.b2b958"
            ]
        ]
    },
    {
        "id": "133517a3.6ba2b8",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e205aa81.b2b958",
        "type": "subflow:f07e020c.d4d43",
        "z": "6a402d92.12d7c4",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "133517a3.6ba2b8"
            ]
        ]
    },
    {
        "id": "d3b167fa.414fa8",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "PROJECT",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "8f82985c.1fa328",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "SETTINGSPASSWORD",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "5497633f.4a758c",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Save global init",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 360,
        "y": 100,
        "wires": []
    },
    {
        "id": "d162777.1380788",
        "type": "exec",
        "z": "3f2da72f.995ab8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "adf1efae.e4e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "77ae9cee.d460f4",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "d162777.1380788"
            ]
        ]
    },
    {
        "id": "adf1efae.e4e0f",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality",
        "func": "var info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nvar levelStartIndex = info.indexOf('Signal level=');\nvar linkStopIndex   = info.indexOf('/70');\nvar levelStopIndex   = info.lastIndexOf('dBm');\nvar linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\nvar signalLevel =  Number(info.substring(levelStartIndex + 13, levelStopIndex - 1));\nvar ssid = info.substring(info.indexOf('ESSID') + 7);\nssid = ssid.substring(0,ssid.indexOf('\"'));\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "80a529df.319ae8",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Settings Out",
        "links": [
            "6c15c07a.68169",
            "e5570491.c3b9a8",
            "faa32816.12ec88",
            "63c1f04.a56fa1"
        ],
        "x": 1115,
        "y": 340,
        "wires": []
    },
    {
        "id": "59adc6a1.990668",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Token Check",
        "links": [
            "65c2a6ff.a7b8f8",
            "116b74d6.fa9e6b",
            "e1bce83b.7098a8"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "c0f3ba34.357ff8",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 420,
        "wires": [
            [
                "59adc6a1.990668"
            ]
        ]
    },
    {
        "id": "5b7e2784.e4b0e8",
        "type": "JsonWebToken",
        "z": "3f2da72f.995ab8",
        "name": "get Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "c0f3ba34.357ff8"
            ]
        ]
    },
    {
        "id": "bcbe321.809a9d",
        "type": "JsonWebToken",
        "z": "3f2da72f.995ab8",
        "name": "decrypt Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 820,
        "y": 340,
        "wires": [
            [
                "e2764b65.a4d8e8"
            ]
        ]
    },
    {
        "id": "e2764b65.a4d8e8",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 990,
        "y": 340,
        "wires": [
            [
                "80a529df.319ae8"
            ],
            [
                "59adc6a1.990668"
            ]
        ]
    },
    {
        "id": "e65a9d0.a28526",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "bcbe321.809a9d"
            ]
        ]
    },
    {
        "id": "568adb75.dc14c4",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "CheckLogin",
        "func": "if (global.get('settingsPassword') == 'NULL')\n{\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];    \n}\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 610,
        "y": 400,
        "wires": [
            [
                "59adc6a1.990668"
            ],
            [
                "5b7e2784.e4b0e8"
            ]
        ]
    },
    {
        "id": "cec1492c.8d6e98",
        "type": "switch",
        "z": "3f2da72f.995ab8",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "e65a9d0.a28526"
            ],
            [
                "568adb75.dc14c4"
            ]
        ]
    },
    {
        "id": "dbecbc87.72d8d",
        "type": "json",
        "z": "3f2da72f.995ab8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "cec1492c.8d6e98"
            ]
        ]
    },
    {
        "id": "af68cced.56a86",
        "type": "http in",
        "z": "3f2da72f.995ab8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "ceb117b.728cbe8"
            ]
        ]
    },
    {
        "id": "882dbc4e.34065",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/sync-receive?name=01\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/basicYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Sync-Receiver 01</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/sync-receive?name=02\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/basicYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Sync-Receiver 02</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 750,
        "y": 500,
        "wires": [
            [
                "11ffc407.64bccc"
            ]
        ]
    },
    {
        "id": "39f94e3e.3e60e2",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Sync-Link",
        "output": "str",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "1e2f8257.5d5fae"
            ]
        ]
    },
    {
        "id": "ceb117b.728cbe8",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "39f94e3e.3e60e2"
            ]
        ]
    },
    {
        "id": "1e2f8257.5d5fae",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 610,
        "y": 500,
        "wires": [
            [
                "882dbc4e.34065"
            ]
        ]
    },
    {
        "id": "11ffc407.64bccc",
        "type": "subflow:6a402d92.12d7c4",
        "z": "3f2da72f.995ab8",
        "name": "",
        "x": 890,
        "y": 500,
        "wires": []
    },
    {
        "id": "c160ccf1.ecc4f",
        "type": "serial in",
        "z": "9e3e4566.027698",
        "name": "",
        "serial": "f3a00884.6a1308",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "859821ea.0f769"
            ]
        ]
    },
    {
        "id": "5722f1f0.87baf",
        "type": "mqtt out",
        "z": "9e3e4566.027698",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "79250bf3.365cc4",
        "x": 1410,
        "y": 400,
        "wires": []
    },
    {
        "id": "c511dea6.e23f3",
        "type": "serial out",
        "z": "9e3e4566.027698",
        "name": "",
        "serial": "f3a00884.6a1308",
        "x": 780,
        "y": 460,
        "wires": []
    },
    {
        "id": "469503aa.06368c",
        "type": "mqtt in",
        "z": "9e3e4566.027698",
        "name": "Subscribe Settings",
        "topic": "+/+/+/setting",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "f57586ed.ecbed8"
            ]
        ]
    },
    {
        "id": "f57586ed.ecbed8",
        "type": "json",
        "z": "9e3e4566.027698",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "29c35de2.40a592"
            ]
        ]
    },
    {
        "id": "56db31cb.20ff5",
        "type": "file",
        "z": "9e3e4566.027698",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "deafcefa.23a06",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "CreateSettings",
        "func": "var device = flow.get('device');\n//node.warn('newSetting = ' + flow.get('newSetting').toString())\n\nvar bufsize = 56;\n\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\n\nvar ioffset = 0\nsettingsView.setInt32(ioffset, flow.get('newSetting'), true);\nioffset = ioffset + 4;\nsettingsView.setInt32(ioffset, device.statusLedChannel.value, true);\nioffset =  ioffset + 4;\nsettingsView.setFloat32(ioffset, device.rfFreq.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.transAddr.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.modemConfigIndex.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint8(ioffset, device.channelStateMask1.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask2.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask3.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask4.value);\n\nreturn {topic:'settings',payload:Buffer.from(buffer)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "c511dea6.e23f3"
            ]
        ]
    },
    {
        "id": "e73588de.9b3238",
        "type": "inject",
        "z": "9e3e4566.027698",
        "name": "init 1 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "57051284.1d4dfc"
            ]
        ]
    },
    {
        "id": "2e6c0430.be51ec",
        "type": "file in",
        "z": "9e3e4566.027698",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "548fd3c.738352c"
            ]
        ]
    },
    {
        "id": "548fd3c.738352c",
        "type": "json",
        "z": "9e3e4566.027698",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "741a633b.c365bc"
            ]
        ]
    },
    {
        "id": "741a633b.c365bc",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "859821ea.0f769",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Read Serial Handshake",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\nvar newSettingDone = 0;\nvar cubeInit = 0;\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ncubeInit = dataView.getInt32(0);\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[1 * 4 + 3 - ib]);\nnewSettingDone = dataView.getInt32(0);\n\nvar newMsg = {topic:'userData', payload:[]};\nfor (var ii = 8; ii < msg.payload.length; ++ii) newMsg.payload[ii - 8] = msg.payload[ii];\n\nif (newSettingDone > 0) \n{\n    flow.set('newSetting', 0);\n}\nif(cubeInit == 1) flow.set('newSetting', 1);\n//node.warn(' ');\n//node.warn('newSettingDone = ' + newSettingDone.toString());\n//node.warn('cubeInit = ' + cubeInit.toString());\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "b7818884.e91148",
                "deafcefa.23a06"
            ]
        ]
    },
    {
        "id": "b3835f6.68e74a",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "56db31cb.20ff5"
            ]
        ]
    },
    {
        "id": "fb320eeb.29893",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "b3835f6.68e74a"
            ]
        ]
    },
    {
        "id": "a9799f6.311e06",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Readings Alarm Scan",
        "func": "msg.payload.linkQuality.value     = global.get('linkQuality');\nmsg.payload.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(msg.payload, 'reading');\nflow.set('device', msg.payload); \nmsg.topic = global.get('project') + '/' + flow.get('cubeInfo').deviceType + '/' + flow.get('cubeInfo').name + '/reading';\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "e9880033.900be",
                "436b7210.dd044c"
            ]
        ]
    },
    {
        "id": "faa32816.12ec88",
        "type": "link in",
        "z": "9e3e4566.027698",
        "name": "sync-receive-01 Settings In",
        "links": [
            "80a529df.319ae8"
        ],
        "x": 55,
        "y": 200,
        "wires": [
            [
                "af219179.74fb"
            ]
        ]
    },
    {
        "id": "e9880033.900be",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 460,
        "wires": [
            [
                "7ed264c5.f194ac"
            ]
        ]
    },
    {
        "id": "93e54d02.08f3c",
        "type": "websocket out",
        "z": "9e3e4566.027698",
        "name": "/sync-receive/websocket",
        "server": "cc197431.86bee8",
        "client": "",
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "116b74d6.fa9e6b",
        "type": "link in",
        "z": "9e3e4566.027698",
        "name": "sync-receive-01 to websocket",
        "links": [
            "59adc6a1.990668"
        ],
        "x": 1235,
        "y": 520,
        "wires": [
            [
                "93e54d02.08f3c"
            ]
        ]
    },
    {
        "id": "25845b4e.eec354",
        "type": "exec",
        "z": "9e3e4566.027698",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1020,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "392fe01c.487c1",
        "type": "mqtt in",
        "z": "9e3e4566.027698",
        "name": "Restart Tray",
        "topic": "+/+/+/restartTray",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "4943bcac.86cf84"
            ]
        ]
    },
    {
        "id": "4943bcac.86cf84",
        "type": "json",
        "z": "9e3e4566.027698",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "35a90497.a9402c"
            ]
        ]
    },
    {
        "id": "5af02a55.ddad54",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "25845b4e.eec354"
            ]
        ]
    },
    {
        "id": "af219179.74fb",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "29c35de2.40a592"
            ],
            [
                "35a90497.a9402c"
            ]
        ]
    },
    {
        "id": "b7818884.e91148",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Create Readings",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ndevice.signalStrength.value = dataView.getInt32(0);\n\nreturn {topic : 'reading', payload : device};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "a9799f6.311e06"
            ]
        ]
    },
    {
        "id": "cc8d43a8.8e1f1",
        "type": "comment",
        "z": "9e3e4566.027698",
        "name": "Customization",
        "info": " - Buffer size on Teensy Output\n - rfcomm port\n - code in Create Readings\n - code in Create Settings\n - websocket URL",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "98cc27c7.e8d688",
        "type": "inject",
        "z": "9e3e4566.027698",
        "name": "Init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "8e7317b4.d64098"
            ]
        ]
    },
    {
        "id": "8e7317b4.d64098",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Cube Custom Info",
        "func": "var cubeInfo = \n{\n    deviceType  : 'sync-receive',\n    name        : '02',\n};\nflow.set('cubeInfo', cubeInfo);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "57051284.1d4dfc",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Make Pretty",
        "func": "var filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "2e6c0430.be51ec"
            ]
        ]
    },
    {
        "id": "29c35de2.40a592",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "fb320eeb.29893"
            ]
        ]
    },
    {
        "id": "35a90497.a9402c",
        "type": "function",
        "z": "9e3e4566.027698",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "5af02a55.ddad54"
            ]
        ]
    },
    {
        "id": "7ed264c5.f194ac",
        "type": "delay",
        "z": "9e3e4566.027698",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "93e54d02.08f3c"
            ]
        ]
    },
    {
        "id": "436b7210.dd044c",
        "type": "delay",
        "z": "9e3e4566.027698",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "5722f1f0.87baf"
            ]
        ]
    },
    {
        "id": "6d1fdcad.4a0d54",
        "type": "websocket in",
        "z": "3f2da72f.995ab8",
        "name": "/sync-receive/websocket",
        "server": "cc197431.86bee8",
        "client": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "dbecbc87.72d8d"
            ]
        ]
    },
    {
        "id": "360369e8.ee1686",
        "type": "http in",
        "z": "3f2da72f.995ab8",
        "name": "/sync-receive",
        "url": "/sync-receive",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 620,
        "wires": [
            [
                "264ba2d5.dc5bee"
            ]
        ]
    },
    {
        "id": "264ba2d5.dc5bee",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'sync-receive';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 620,
        "wires": [
            [
                "b9cf762b.764188"
            ]
        ]
    },
    {
        "id": "37ebac50.0ef304",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Sync-Receiver {{{payload.script.name}}}",
        "output": "str",
        "x": 280,
        "y": 700,
        "wires": [
            [
                "cba8176e.c00fc8"
            ]
        ]
    },
    {
        "id": "4b065eb6.01ab8",
        "type": "subflow:6a402d92.12d7c4",
        "z": "3f2da72f.995ab8",
        "name": "",
        "x": 1130,
        "y": 740,
        "wires": []
    },
    {
        "id": "cba8176e.c00fc8",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var editingChannel = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            enableChannelEditor(false);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n//            console.log(msg);\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function enableChannelEditor(enable)\n        {\n            $('#rfFreq').prop(\"disabled\", !enable);\n            $('#transAddr').prop(\"disabled\", !enable);\n            $('#modemConfigIndex').prop(\"disabled\", !enable);\n            for (var ib = 0; ib <= 8; ++ib)\n            {\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                    $(checkBoxId).prop(\"disabled\", !enable);\n                }\n            }\n            $('#c0Start').prop(\"disabled\", !enable);\n            $('#c1Start').prop(\"disabled\", !enable);\n            $('#c2Start').prop(\"disabled\", !enable);\n            $('#c3Start').prop(\"disabled\", !enable);\n            $('#c0Stop').prop(\"disabled\", !enable);\n            $('#c1Stop').prop(\"disabled\", !enable);\n            $('#c2Stop').prop(\"disabled\", !enable);\n            $('#c3Stop').prop(\"disabled\", !enable);\n            $('#c0StatusLed').prop(\"disabled\", !enable);\n            $('#c1StatusLed').prop(\"disabled\", !enable);\n            $('#c2StatusLed').prop(\"disabled\", !enable);\n            $('#c3StatusLed').prop(\"disabled\", !enable);\n            if ( enable)\n            {\n                $('#editChannelButton').text('Stop Editing');\n            }\n            else\n            {\n                $('#editChannelButton').text('Edit');\n            }\n        }\n        function editChannelConfig()\n        {\n            editingChannel = !editingChannel;\n            enableChannelEditor(editingChannel);\n            if (!editingChannel)\n            {\n                var pow2 = [1,2,4,8,16,32,64,128];\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var startId = '#c' + ic.toString() + 'Start';\n                    var stopId = '#c' + ic.toString() + 'Stop';\n                    var startDeviceAtt = 'channelBeginTime' + (ic + 1).toString();\n                    var stopDeviceAtt =  'channelEndTime'   + (ic + 1).toString();\n                    var maskAtt = 'channelStateMask' + (ic + 1).toString();\n\n                    device[maskAtt].value = 0;\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                        if ($(checkBoxId).prop(\"checked\")) \n                        {\n                            device[maskAtt].value = device[maskAtt].value + pow2[ib];\n                        }\n                    }\n                    if (!isNaN(Number($(startId).val()))) device[startDeviceAtt].value = Number($(startId).val());\n                    if (!isNaN(Number($(stopId).val() ))) device[stopDeviceAtt].value  = Number($(stopId).val());\n                    var statusLedButtonId = '#c' + ic.toString() + 'StatusLed';\n                    if ($(statusLedButtonId).prop(\"checked\")) device.statusLedChannel.value = ic;\n                }\n                if (!isNaN(Number($('#rfFreq').val())))\n                {\n                    device.rfFreq.value = Number($('#rfFreq').val());\n                }\n                if (!isNaN(Number($('#transAddr').val())))\n                {\n                    device.transAddr.value = Number($('#transAddr').val());\n                }\n                device.modemConfigIndex.value = Number($('#modemConfigIndex').val());\n\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                checkLogin(sendSettingToMqtt, mqttMessage);\n            }\n        }\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#signalStrength').text(device.signalStrength.value);\n            if(!editingChannel)\n            {\n                $('#rfFreq').val(device.rfFreq.value);\n                $('#transAddr').val(device.transAddr.value);\n                $('#modemConfigIndex').val(device.modemConfigIndex.value.toString());\n                for (var ic = 0; ic < 4; ++ic)\n                {\n                    var startId = '#c' + ic.toString() + 'Start';\n                    var stopId = '#c' + ic.toString() + 'Stop';\n                    var startDeviceAtt = 'channelBeginTime' + (ic + 1).toString();\n                    var stopDeviceAtt =  'channelEndTime'   + (ic + 1).toString();\n                    var maskAtt = 'channelStateMask' + (ic + 1).toString();\n                    $(startId).val(device[startDeviceAtt].value);\n                    $(stopId).val(device[stopDeviceAtt].value);\n                    var bits = getBits(device[maskAtt].value);\n                    for (var ib = 0; ib < 8; ++ib)\n                    {\n                        var checkBoxId = '#b' + ib.toString() + 'c' + ic.toString();\n                        var checked = false;\n                        if (bits[ib] == 1) checked = true;\n                        $(checkBoxId).prop(\"checked\", checked);\n                    }\n                    var statusLedButtonId = '#c' + ic.toString() + 'StatusLed';\n                    if (device.statusLedChannel.value == ic)\n                    {\n                        $(statusLedButtonId).prop(\"checked\", true);\n                    }\n                    else\n                    {\n                        $(statusLedButtonId).prop(\"checked\", false);\n                    }\n                }\n            }\n        }\n        function getBits(bytey)\n        {\n            var testByte = bytey;\n            var check = [0,0,0,0,0,0,0,0];\n            for (var ib = 0; ib < 8; ++ib)\n            {\n                check[ib] = testByte & 1;\n                testByte = testByte >> 1;\n            }\n            return check;\n        }\n",
        "output": "str",
        "x": 650,
        "y": 620,
        "wires": [
            [
                "fd7178b3.e918b8"
            ]
        ]
    },
    {
        "id": "6d4267dc.6b9a58",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 640,
        "y": 700,
        "wires": [
            [
                "ed4d9d0.3cabf6"
            ]
        ]
    },
    {
        "id": "9e36ec72.1b686",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.channelConfig}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.dangerZone}}}\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 950,
        "y": 740,
        "wires": [
            [
                "4b065eb6.01ab8"
            ]
        ]
    },
    {
        "id": "3ab48394.462ebc",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 660,
        "wires": [
            [
                "d1f57c2c.8fd42"
            ]
        ]
    },
    {
        "id": "fd7178b3.e918b8",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 670,
        "y": 660,
        "wires": [
            [
                "6d4267dc.6b9a58"
            ]
        ]
    },
    {
        "id": "d1f57c2c.8fd42",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 700,
        "wires": [
            [
                "9e36ec72.1b686"
            ]
        ]
    },
    {
        "id": "b9cf762b.764188",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 290,
        "y": 660,
        "wires": [
            [
                "37ebac50.0ef304"
            ]
        ]
    },
    {
        "id": "ed4d9d0.3cabf6",
        "type": "template",
        "z": "3f2da72f.995ab8",
        "name": "html.channelConfig",
        "field": "payload.html.channelConfig",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- channelConfig HTML -->\n                <div class='card'>\n                    <table class='card-title' width='100%'>\n                        <tr>\n                            <td width='20%' >\n                            </td>\n                            <td width='60%' align='center'>\n                                <span >Channel Configuration</span>\n                            </td>\n                            <td width='20%'>\n                                <button class='btn btn-block card-button' style='font-size: 50%;' id='editChannelButton' onclick=\"editChannelConfig()\" >Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">Bit</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">1</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">2</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">3</span></td>\n                                    <td width=\"20%\" align=\"center\"><span class=\"card-text\">4</span></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">0</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b0c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">1</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b1c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">2</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b2c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">3</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b3c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">4</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b4c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">5</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b5c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">6</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b6c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\" style=\"font-size: 150%;\">7</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"b7c3\"></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Start (uS)</span></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c0Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c1Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c2Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c3Start\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                </tr>\n                                <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Stop (uS)</span></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c0Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c1Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c2Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                    <td width=\"20%\" align=\"center\"><input id=\"c3Stop\" type=\"text\" value=\"-1\" class=\"big-text\"  size=\"8\"/></td>\n                                </tr>\n                                 <tr>\n                                    <td width=\"20%\"><span class=\"card-text\">Status LED</span></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c0StatusLed\" name=\"statusLed\" value=\"0\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c1StatusLed\" name=\"statusLed\" value=\"1\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c2StatusLed\" name=\"statusLed\" value=\"2\"></td>\n                                    <td width=\"20%\" align=\"center\"><input type=\"radio\" class=\"inputLarger\" id=\"c3StatusLed\"  name=\"statusLed\" value=\"3\"></td>\n                                </tr>\n                           </table>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Receiver Power (dBm)</span>\n                                    </td>\n                                    <td>\n                                        <span id=\"signalStrength\" class=\"big-text\">-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >RF Frequency (MHz)</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"rfFreq\" type=\"text\" value=\"-100\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Transmitter Address</span>\n                                    </td>\n                                    <td>\n                                        <input id=\"transAddr\" type=\"text\" value=\"-100\" class=\"big-text\"  size=\"8\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span class='card-text' >Modem Config</span>\n                                    </td>\n                                    <td>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"modemConfigIndex\">\n                                          <option value=\"0\">Bw125Cr45Sf128</option>\n                                          <option value=\"1\">Bw500Cr45Sf128</option>\n                                          <option value=\"2\">Bw31_25Cr48Sf512</option>\n                                          <option value=\"3\">Bw125Cr48Sf4096</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 620,
        "wires": [
            [
                "3ab48394.462ebc"
            ]
        ]
    },
    {
        "id": "75ccc70e.9d13f8",
        "type": "serial in",
        "z": "99bf091c.ae35b8",
        "name": "",
        "serial": "796050bc.3b121",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "7acbdb95.855564"
            ]
        ]
    },
    {
        "id": "68fefcd4.0f7184",
        "type": "mqtt out",
        "z": "99bf091c.ae35b8",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "79250bf3.365cc4",
        "x": 1410,
        "y": 400,
        "wires": []
    },
    {
        "id": "a6173576.a3e918",
        "type": "serial out",
        "z": "99bf091c.ae35b8",
        "name": "",
        "serial": "796050bc.3b121",
        "x": 780,
        "y": 460,
        "wires": []
    },
    {
        "id": "dc69ce25.2457e",
        "type": "mqtt in",
        "z": "99bf091c.ae35b8",
        "name": "Subscribe Settings",
        "topic": "+/+/+/setting",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "a97609a6.6829e8"
            ]
        ]
    },
    {
        "id": "a97609a6.6829e8",
        "type": "json",
        "z": "99bf091c.ae35b8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "5e981238.d79a7c"
            ]
        ]
    },
    {
        "id": "3a4f1a9f.678056",
        "type": "file",
        "z": "99bf091c.ae35b8",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1cd4bb20.beeea5",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "CreateSettings",
        "func": "var device = flow.get('device');\n//node.warn('newSetting = ' + flow.get('newSetting').toString())\n\nvar bufsize = 56;\n\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\n\nvar ioffset = 0\nsettingsView.setInt32(ioffset, flow.get('newSetting'), true);\nioffset = ioffset + 4;\nsettingsView.setInt32(ioffset, device.statusLedChannel.value, true);\nioffset =  ioffset + 4;\nsettingsView.setFloat32(ioffset, device.rfFreq.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.transAddr.value, true);\nioffset =  ioffset + 4;\nsettingsView.setInt32(ioffset, device.modemConfigIndex.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelBeginTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime1.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime2.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime3.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint32(ioffset, device.channelEndTime4.value, true);\nioffset =  ioffset + 4;\nsettingsView.setUint8(ioffset, device.channelStateMask1.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask2.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask3.value);\nioffset =  ioffset + 1;\nsettingsView.setUint8(ioffset, device.channelStateMask4.value);\n\nreturn {topic:'settings',payload:Buffer.from(buffer)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "a6173576.a3e918"
            ]
        ]
    },
    {
        "id": "86c69141.33808",
        "type": "inject",
        "z": "99bf091c.ae35b8",
        "name": "init 1 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "729b55ad.57e2fc"
            ]
        ]
    },
    {
        "id": "d6a7ea99.9473e8",
        "type": "file in",
        "z": "99bf091c.ae35b8",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "bf6437de.4b63c8"
            ]
        ]
    },
    {
        "id": "bf6437de.4b63c8",
        "type": "json",
        "z": "99bf091c.ae35b8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "f2fa4ce.c96adb"
            ]
        ]
    },
    {
        "id": "f2fa4ce.c96adb",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "7acbdb95.855564",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Read Serial Handshake",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\nvar newSettingDone = 0;\nvar cubeInit = 0;\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ncubeInit = dataView.getInt32(0);\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[1 * 4 + 3 - ib]);\nnewSettingDone = dataView.getInt32(0);\n\nvar newMsg = {topic:'userData', payload:[]};\nfor (var ii = 8; ii < msg.payload.length; ++ii) newMsg.payload[ii - 8] = msg.payload[ii];\n\nif (newSettingDone > 0) \n{\n    flow.set('newSetting', 0);\n}\nif(cubeInit == 1) flow.set('newSetting', 1);\n//node.warn(' ');\n//node.warn('newSettingDone = ' + newSettingDone.toString());\n//node.warn('cubeInit = ' + cubeInit.toString());\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "4b7341d2.8838f",
                "1cd4bb20.beeea5"
            ]
        ]
    },
    {
        "id": "6db68e31.37e07",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "3a4f1a9f.678056"
            ]
        ]
    },
    {
        "id": "6aae94fc.3ce75c",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "6db68e31.37e07"
            ]
        ]
    },
    {
        "id": "ed471dd4.d0c1f",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Readings Alarm Scan",
        "func": "msg.payload.linkQuality.value     = global.get('linkQuality');\nmsg.payload.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(msg.payload, 'reading');\nflow.set('device', msg.payload); \nmsg.topic = global.get('project') + '/' + flow.get('cubeInfo').deviceType + '/' + flow.get('cubeInfo').name + '/reading';\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "7ffdbf29.8d92c",
                "3e5d5dd5.c8fdf2"
            ]
        ]
    },
    {
        "id": "63c1f04.a56fa1",
        "type": "link in",
        "z": "99bf091c.ae35b8",
        "name": "sync-receive-01 Settings In",
        "links": [
            "80a529df.319ae8"
        ],
        "x": 55,
        "y": 200,
        "wires": [
            [
                "17f39e64.61dbc2"
            ]
        ]
    },
    {
        "id": "7ffdbf29.8d92c",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 460,
        "wires": [
            [
                "77960f15.1657d"
            ]
        ]
    },
    {
        "id": "83e803f4.cf564",
        "type": "websocket out",
        "z": "99bf091c.ae35b8",
        "name": "/sync-receive/websocket",
        "server": "cc197431.86bee8",
        "client": "",
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "e1bce83b.7098a8",
        "type": "link in",
        "z": "99bf091c.ae35b8",
        "name": "sync-receive-01 to websocket",
        "links": [
            "59adc6a1.990668"
        ],
        "x": 1235,
        "y": 520,
        "wires": [
            [
                "83e803f4.cf564"
            ]
        ]
    },
    {
        "id": "d9ee4577.9b5108",
        "type": "exec",
        "z": "99bf091c.ae35b8",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1020,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "151d585b.8ab4b8",
        "type": "mqtt in",
        "z": "99bf091c.ae35b8",
        "name": "Restart Tray",
        "topic": "+/+/+/restartTray",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "922632be.186da"
            ]
        ]
    },
    {
        "id": "922632be.186da",
        "type": "json",
        "z": "99bf091c.ae35b8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "a348951e.f44098"
            ]
        ]
    },
    {
        "id": "b4695866.f07918",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "d9ee4577.9b5108"
            ]
        ]
    },
    {
        "id": "17f39e64.61dbc2",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "5e981238.d79a7c"
            ],
            [
                "a348951e.f44098"
            ]
        ]
    },
    {
        "id": "4b7341d2.8838f",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Create Readings",
        "func": "var ib;\nvar device = flow.get('device');\nvar dataView     = new DataView(new ArrayBuffer(4));\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ndevice.signalStrength.value = dataView.getInt32(0);\n\nreturn {topic : 'reading', payload : device};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "ed471dd4.d0c1f"
            ]
        ]
    },
    {
        "id": "6766d078.64dc5",
        "type": "comment",
        "z": "99bf091c.ae35b8",
        "name": "Customization",
        "info": " - Buffer size on Teensy Output\n - rfcomm port\n - code in Create Readings\n - code in Create Settings\n - websocket URL",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "94e64772.529b38",
        "type": "inject",
        "z": "99bf091c.ae35b8",
        "name": "Init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "30187f88.010a4"
            ]
        ]
    },
    {
        "id": "30187f88.010a4",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Cube Custom Info",
        "func": "var cubeInfo = \n{\n    deviceType  : 'sync-receive',\n    name        : '01',\n};\nflow.set('cubeInfo', cubeInfo);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "729b55ad.57e2fc",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Make Pretty",
        "func": "var filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "d6a7ea99.9473e8"
            ]
        ]
    },
    {
        "id": "5e981238.d79a7c",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "6aae94fc.3ce75c"
            ]
        ]
    },
    {
        "id": "a348951e.f44098",
        "type": "function",
        "z": "99bf091c.ae35b8",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "b4695866.f07918"
            ]
        ]
    },
    {
        "id": "77960f15.1657d",
        "type": "delay",
        "z": "99bf091c.ae35b8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "83e803f4.cf564"
            ]
        ]
    },
    {
        "id": "3e5d5dd5.c8fdf2",
        "type": "delay",
        "z": "99bf091c.ae35b8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "68fefcd4.0f7184"
            ]
        ]
    }
]